services:
    web:
        build:
            context: .
            dockerfile: DockerFile
        container_name: yii2_web
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - ./runtime:/var/www/html/runtime
            - ./web/assets:/var/www/html/web/assets
        ports:
            - "8080:80"
        depends_on:
             db:
                 condition: service_healthy
        command: >
            sh -c "php yii migrate/up --interactive=0 --color=1
            && apache2-foreground"
        networks:
            - my_network

    db:
        image: mysql:5.7
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uyii2user", "-psecret" ]
            interval: 5s
            timeout: 10s
            retries: 10
        container_name: yii2_db
        command:
            - --bind-address=0.0.0.0  # Разрешаем подключения с любого IP
            - --skip-name-resolve     # Отключаем DNS-разрешение (опционально, для ускорения)
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_DATABASE: yii2db
            MYSQL_USER: yii2user
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_HOST: '%'      # Разрешаем root-подключения с любого IP (опционально)
        volumes:
            - db_data:/var/lib/mysql
        ports:
            - "3306:3306"             # Пробрасываем порт на хост
        networks:
            - my_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: yii2_phpmyadmin
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_USER: yii2user
            PMA_PASSWORD: secret
        ports:
            - "8081:80"
        depends_on:
            - db
        networks:
            - my_network

volumes:
    db_data:

networks:
    my_network:
        driver: bridge